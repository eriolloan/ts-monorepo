# ⭐ Env
env:
    browser: true
    es2021: true
    node: true

# ⭐ Extends
extends:
    - eslint:recommended
    - plugin:import/recommended
    - plugin:@typescript-eslint/eslint-recommended
    - plugin:@typescript-eslint/recommended
    - prettier

# ⭐ Parser
parser: '@typescript-eslint/parser'

# ⭐ Parser options
parserOptions:
    ecmaFeatures:
        jsx: true
    ecmaVersion: latest
    sourceType: module
    project:
        - './tsconfig.json'

# ⭐ Plugins
plugins:
    - '@typescript-eslint'
    - import

# ⭐ Settings
settings:
    import/parsers:
        '@typescript-eslint/parser': ['.ts', '.tsx']
    import/resolver:
        typescript:
            alwaysTryTypes: true

# ⭐ Rules
rules:
    # ⭐ Imports & Files extensions
    import/no-import-module-exports: 'off'
    # Avoid .ts and .tsx import extensions
    import/extensions: 'off'
    # Avoid extraneous dependencies (devDependencies)
    import/no-extraneous-dependencies: ['error', { devDependencies: true }]
    # Turn on errors for missing imports
    import/no-unresolved: 'off'
    # We like to export single constants and functions
    import/prefer-default-export: 'off'
    # We use dynamic requires
    import/no-dynamic-require: 'off'
    global-require: 'off'
    # We love to export default on index files
    no-restricted-exports: 'off'

    # ⭐ General rules
    padding-line-between-statements:
        - error
        # require blank lines after every sequence of variable declarations
        - { blankLine: always, prev: [const, let, var], next: '*' }
        - { blankLine: any, prev: [const, let, var], next: [const, let, var] }
        # require blank lines before return statements
        - { blankLine: always, prev: '*', next: return }

    # Fixing conflict between prettier and eslint with this rule
    object-curly-newline: 'off'
    # Disabling operator-linebreak & implicit-arrow-linebreak since prettier does not suppor it
    operator-linebreak: 'off'
    implicit-arrow-linebreak: 'off'
    # We need to re-assign some function parameters
    no-param-reassign: 'off'
    # We like to use hasOwnProperty
    no-prototype-builtins: 'off'
    # We use for..in
    no-restricted-syntax: 'off'
    # We like nested ternaries
    no-nested-ternary: 'off'
    # We need __NEXT_DATA__
    no-underscore-dangle: 'off'
    # This is affecting the authentication
    no-promise-executor-return: 'off'
    # We don't need a default in all cases
    default-case: 'off'
    # Prefering prettier format
    function-paren-newline: ['error', 'multiline']
    # We don't need consistent returns
    consistent-return: 'off'

    # ⭐ TypeScript rules
    # We don't like comma-dangle
    '@typescript-eslint/comma-dangle': 'off'
    # Disabling indent in favor of prettier indentation
    '@typescript-eslint/indent': 'off'
    # Disabling base rule because reports incorrect errors with TypeScript types
    '@typescript-eslint/no-redeclare': 'off'
    # We don't like semicolons
    '@typescript-eslint/semi': 'off'
    # Need it to stop if SERVICE is not passed
    '@typescript-eslint/no-throw-literal': 'off'

# ⭐ Overrides
overrides: [{ files: ['*.ts', '*.tsx'], rules: { 'no-undef': 'off' }, parserOptions: { project: ['./tsconfig.json'] } }]
